version: v1
name: wf-ott-contract
type: workflow
tags:
  - ott.contract
description: The job performs metrics calculations and checks on contract data
workflow:
  title: Metrics and checks
  dag:
    - name: ott-contract-quality
      title: Metrics and checks
      description: The job performs metrics calculations and checks on contract data
      spec:
        stack: flare:4.0
        compute: runnable-default
        tags:
          - ott.contract
        title: Metrics and checks
        description: The job performs metrics calculations and checks on contract data
        flare:
          job:
            explain: true
            logLevel: INFO
            inputs:
              - name: ott_contract
                dataset: dataos://icebase:telecom_ottchurn/ott_contract
                format: iceberg
            assertions: 

#Verify whether the value of Contract ID is Unique in database
              - sql: |
                    SELECT
                      count(contract_id) count_contract_id
                    FROM
                      ott_contract
                    GROUP BY
                      contract_id
                test: 
                  - count_contract_id == 1

#Verify whether the value of the Contract ID is NOT NULL in the database

              - sql: |
                    SELECT
                    count(contract_id) as contract
                    FROM
                    ott_contract
                    WHERE
                    contract_id IS NULL
                tests: 
                  - contract == 0 

#Verify whether the value of Customer ID is Unique in database
              - sql:
                    SELECT
                      count(customer_id) count_customer_id
                    FROM
                     ott_contract
                    GROUP BY
                     customer_id
                test:
                  - count_customer_id == 1 

#Verify whether the value of the Customer ID is NOT NULL in the database

              - sql: |
                    SELECT
                    count(customer_id) as customer
                    FROM
                    ott_contract
                    WHERE
                    customer_id IS NULL
                tests: 
                  - customer == 0 
#Verify whether the value of Complaint ID is Unique in database
              - sql:
                    SELECT
                      count(complaint_id) count_complaint_id
                    FROM
                      ott_contract
                    GROUP BY
                      complaint_id
                test:
                  - count_complaint_id == 1

#Verify whether the value of the Complaint ID is NOT NULL in the database

              - sql: |
                    SELECT
                    count(complaint_id) as complaint
                    FROM
                    ott_contract
                    WHERE
                    complaint_id IS NULL
                tests: 
                  - complaint == 0 
  #Verify whether the value of the Contract Effective Date is not greater than Contract End date
              - sql: |
                    SELECT
                      CASE
                      WHEN contract_effective_date IS NULL THEN 0
                      ELSE 1
                      END contract_effective_date
                      FROM
                        ott_contract
                      WHERE
                        contract_effective_date < contract_end_date
                        GROUP BY
                        1
                        ORDER BY
                        1
                tests: 
                  - contract_effective_date == 1

          sparkConf:
            - spark.serializer: org.apache.spark.serializer.KryoSerializer
            - spark.sql.shuffle.partitions: "10"
            - spark.memory.storageFraction: "0.1"
            - spark.memory.fraction: "0.1"
            - spark.shuffle.memoryFraction: "0.2"